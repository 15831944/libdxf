<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<book>
  <bookinfo>
    <title>DXF Reference R10.</title>

    <author>
      <firstname/>

      <surname/>

      <affiliation>
        <orgname>Autodesk Inc.</orgname>
      </affiliation>
    </author>

    <pubdate/>

    <copyright>
      <year>1988 Autodesk, Inc</year>
    </copyright>

    <legalnotice>
      <para>All rights reserved.</para>
    </legalnotice>

    <releaseinfo>This file is an excerpt from the AutoCAD Release 10 Reference
    Manual.</releaseinfo>
  </bookinfo>

  <chapter>
    <title>Introduction.</title>

    <section>
      <title>Drawing Interchange and File Formats.</title>

      <para>AutoCAD can be used by itself as a complete drawing editor.</para>

      <para>In some applications, however, other programs must examine
      drawings created by AutoCAD or generate drawings to be viewed, modified,
      or plotted with AutoCAD.</para>

      <para>For example, if you've made an architectural drawing with AutoCAD,
      using INSERTed parts to represent windows, doors, and so on, you can
      process the drawing file and produce a bill of materials of all the
      items used in the drawing, or even make energy use calculations based on
      the area and the number and type of windows used.</para>

      <para>Another possible application is to use AutoCAD to describe
      structures that are then sent to a large computer for finite element
      structural analysis.</para>

      <para>You can compute stresses and displacements and send back
      information to display the deformed structure as an AutoCAD
      drawing.</para>

      <para>Since the AutoCAD drawing database (.dwg file) is written in a
      very compact format that changes significantly from time to time as new
      features are added, we do not document its format and do not recommend
      that you attempt to write programs to read it directly.</para>

      <para>To assist in interchanging drawings between AutoCAD and other
      programs, a "Drawing Interchange" file format (DXF(tm)) has been
      defined.</para>

      <para>All implementations of AutoCAD accept this format and are able to
      convert it to and from their internal drawing file
      representation.</para>

      <para>AutoCAD also supports the Initial Graphics Exchange Standard
      (IGES) file format.</para>

      <para>The information comprising an AutoCAD drawing can be written out
      in IGES format, and IGES files can be read and converted to AutoCAD's
      internal format.</para>
    </section>

    <section>
      <title>ASCII Drawing Interchange (DXF) Files.</title>

      <para>This section describes AutoCAD's DXF (drawing interchange) file
      format and the commands provided to read and write these files.</para>

      <para>DXF files are standard ASCII text files.</para>

      <para>They can easily be translated to the formats of other CAD systems,
      or submitted to other programs for specialized analysis.</para>

      <section>
        <title>DXFOUT Command - Writing a DXF File.</title>

        <para>You can generate a drawing interchange file from an existing
        drawing by means of the Drawing Editor's DXFOUT command.</para>

        <para>The command format is:</para>

        <programlisting>Command: DXFOUT File name &lt;default&gt;: (name or RETURN)</programlisting>

        <para>The default name for the output file is the same as that of the
        current drawing, but with a file type of ".dxf".</para>

        <para>If you specify an explicit file name, do not include a file
        type; ".dxf" is assumed.</para>

        <para>If a file with the same name already exists, it is
        deleted.</para>

        <para>Next, DXFOUT asks what precision you want for floating-point
        numbers and permits output of a partial DXF file containing only
        selected objects.</para>

        <programlisting>Enter decimal places of accuracy (0 to 16)/Entities/Binary &lt;6&gt;:</programlisting>

        <para>The "Binary" option is described later in this appendix.</para>

        <para>If you respond with "Entities" (or just "E"), DXFOUT will ask
        you to select the objects you want written to the DXF file.</para>

        <para>Only the objects you select will be included in the output file
        - symbol tables (including Block Definitions) will not be
        included.</para>

        <para>Once you've selected the desired objects, AutoCAD will prompt
        again for the numeric precision:</para>

        <programlisting>Enter decimal places of accuracy (0 to 16)/Binary &lt;6&gt;:</programlisting>
      </section>

      <section>
        <title>DXFIN Command - Loading a DXF File.</title>

        <para>A drawing interchange file can be converted into an AutoCAD
        drawing by means of the DXFIN command.</para>

        <para>First enter the Drawing Editor using the "Create new drawing"
        task from the Main Menu.</para>

        <para>Then issue the DXFIN command.</para>

        <programlisting>Command: DXFIN File name: (name)</programlisting>

        <para>Enter the name of the drawing interchange file to be
        loaded.</para>

        <section>
          <title>Full DXFIN.</title>

          <para>To load a complete DXF file, you must use DXFIN in an empty
          drawing, before any entities have been drawn and before any
          additional Block definitions, layers, linetypes, text styles, named
          views, named coordinate systems, or named viewport configurations
          have been created.</para>

          <para>(If your prototype draw- ing contains any such items, use Main
          Menu Task 1's "name=" technique to create a new drawing without a
          prototype.)</para>

          <para>If any errors are detected during the input, the new drawing
          is discarded.</para>

          <para>Otherwise, an automatic "ZOOM All" is performed to set the
          drawing extents.</para>
        </section>

        <section>
          <title>Partial DXFIN.</title>

          <para>If the current drawing is not empty, DXFIN loads only the
          ENTITIES section of the DXF file, adding the entities found there to
          the current drawing.</para>

          <para>In this case, DXFIN displays the message:</para>

          <programlisting>Not a new drawing -- only ENTITIES section will be input.</programlisting>

          <para>If errors are detected during such partial DXF input, the
          drawing is returned to the state it was in before the DXFIN
          command.</para>

          <para>Otherwise, the newly added entities are drawn.</para>
        </section>
      </section>

      <section>
        <title>DXF File Format.</title>

        <para>This section describes the format of a DXF file in detail. It
        contains a great deal of technical information that you need only if
        you're writing your own program to process DXF files.</para>

        <para>Otherwise, you can skip this section.</para>

        <para>It would probably be helpful to produce a DXF file from a small
        drawing, print it out, and refer to it occasionally while reading the
        information presented below.</para>

        <section>
          <title>General File Structure.</title>

          <para>A Drawing Interchange File is simply an ASCII text file with a
          file type of ".dxf" and specially-formatted text.</para>

          <para>The overall organization of a DXF file is as follows:</para>

          <orderedlist>
            <listitem>
              <para>HEADER section - General information about the drawing is
              found in this section of the DXF file.</para>

              <para>Each parameter has a variable name and an associated
              value.</para>
            </listitem>

            <listitem>
              <para>TABLES section -- This section contains definitions of
              named items.</para>

              <itemizedlist>
                <listitem>
                  <para>Linetype (LTYPE) table.</para>
                </listitem>

                <listitem>
                  <para>Layer table.</para>
                </listitem>

                <listitem>
                  <para>Text style (STYLE) table.</para>
                </listitem>

                <listitem>
                  <para>View table.</para>
                </listitem>

                <listitem>
                  <para>User Coordinate System (UCS) table.</para>
                </listitem>

                <listitem>
                  <para>Viewport configuration (VPORT) table.</para>
                </listitem>

                <listitem>
                  <para>Drawing manager (DWGMGR) table (for future
                  use).</para>
                </listitem>
              </itemizedlist>
            </listitem>

            <listitem>
              <para>BLOCKS section - This section contains Block Definition
              entities describing the entities comprising each Block in the
              drawing.</para>
            </listitem>

            <listitem>
              <para>ENTITIES section - This section contains the drawing
              entities, including any Block References.</para>
            </listitem>

            <listitem>
              <para>END OF FILE.</para>
            </listitem>
          </orderedlist>

          <para>If you use DXFOUT's "Entities" option, the resulting DXF file
          will contain only the ENTITIES and END OF FILE sections, and the
          ENTITIES section will reflect only the objects you select for
          output.</para>

          <para>A DXF file is composed of a multiplicity of groups, each of
          which occupies two lines in the DXF file.</para>

          <para>The first line of a group is a group code, which is a positive
          nonzero integer output in FORTRAN "I3" format (that is, right
          justified and blank filled in a three character field).</para>

          <para>The second line of the group is the group value, in a format
          which depends on the type of the group as specified by the group
          code.</para>

          <para>The specific assignment of group codes depends upon the item
          being described in the file.</para>

          <para>However, the type of the value this group supplies is derived
          from the group code in the following way:<table>
              <title>Group code ranges and values.</title>

              <tgroup cols="2">
                <thead>
                  <row>
                    <entry align="center">Group code range</entry>

                    <entry align="center">Following value</entry>
                  </row>
                </thead>

                <tbody>
                  <row>
                    <entry>0 - 9</entry>

                    <entry>String</entry>
                  </row>

                  <row>
                    <entry>10 - 59</entry>

                    <entry>Floating-point</entry>
                  </row>

                  <row>
                    <entry>60 - 79</entry>

                    <entry>Integer</entry>
                  </row>

                  <row>
                    <entry>210 - 239</entry>

                    <entry>Floating-point</entry>
                  </row>

                  <row>
                    <entry>999</entry>

                    <entry>Comment (string)</entry>
                  </row>
                </tbody>
              </tgroup>
            </table></para>

          <para>Thus a program can easily read the value following a group
          code without knowing the particular use of this group in an item in
          the file.</para>

          <para>The appearance of values in the DXF file is not affected by
          the setting of the UNITS command: coordinates are always represented
          as decimal (or possibly scientific notation if very large) numbers,
          and angles are always represented in decimal degrees with zero
          degrees to the east of origin.</para>

          <para>Variables, table entries, and entities are described by a
          group that introduces the item, giving its type and/or name,
          followed by multiple groups that supply the values associated with
          the item.</para>

          <para>In addition, special groups are used for file separators such
          as markers for the beginning and end of sections, tables, and the
          file itself.</para>

          <para>Entities, table entries, and file separators are always
          introduced with a 0 group code that is followed by a name describing
          the item.</para>
        </section>

        <section>
          <title>Group Codes.</title>

          <para>Group codes are used both to indicate the type of the value of
          the group, as explained above, and to indicate the general use of
          the group.</para>

          <para>The specific function of the group code depends on the actual
          variable, table item, or entity description.</para>

          <para>This section indicates the general use of groups, noting as
          "(fixed)" any that always have the same function.<table>
              <title>Group codes.</title>

              <tgroup cols="2">
                <thead>
                  <row>
                    <entry align="center">Group code</entry>

                    <entry align="center">Value type</entry>
                  </row>
                </thead>

                <tbody>
                  <row>
                    <entry>0</entry>

                    <entry>Identifies the start of an entity, table entry, or
                    file separator. The text value that follows indicates
                    which.</entry>
                  </row>

                  <row>
                    <entry>1</entry>

                    <entry>The primary text value for an entity.</entry>
                  </row>

                  <row>
                    <entry>2</entry>

                    <entry>A name; Attribute tag, Block name, etc.</entry>
                  </row>

                  <row>
                    <entry>3, 4</entry>

                    <entry>Other textual or name values.</entry>
                  </row>

                  <row>
                    <entry>5</entry>

                    <entry>Entity handle expressed as a hexadecimal
                    string.</entry>
                  </row>

                  <row>
                    <entry>6</entry>

                    <entry>Linetype name (fixed).</entry>
                  </row>

                  <row>
                    <entry>7</entry>

                    <entry>Text style name (fixed).</entry>
                  </row>

                  <row>
                    <entry>8</entry>

                    <entry>Layer name (fixed).</entry>
                  </row>

                  <row>
                    <entry>9</entry>

                    <entry>Variable name identifier (used only in HEADER
                    section of the DXF file).</entry>
                  </row>

                  <row>
                    <entry>10</entry>

                    <entry>Primary X coordinate (start point of a Line or Text
                    entity, center of a Circle, etc.).</entry>
                  </row>

                  <row>
                    <entry>11 ... 18</entry>

                    <entry>Other X coordinates.</entry>
                  </row>

                  <row>
                    <entry>20</entry>

                    <entry>Primary Y coordinate. 2n values always correspond
                    to 1n values and immediately follow them in the
                    file.</entry>
                  </row>

                  <row>
                    <entry>21 ... 28</entry>

                    <entry>Other Y coordinates.</entry>
                  </row>

                  <row>
                    <entry>30</entry>

                    <entry>Primary Z coordinate. 3n values always correspond
                    to 1n and 2n values and immediately follow them in the
                    file.</entry>
                  </row>

                  <row>
                    <entry>31 ... 37</entry>

                    <entry>Other Z coordinates.</entry>
                  </row>

                  <row>
                    <entry>38</entry>

                    <entry>This entity's elevation if nonzero (fixed). Output
                    only if system variable FLATLAND is set to 1.</entry>
                  </row>

                  <row>
                    <entry>39</entry>

                    <entry>This entity's thickness if nonzero (fixed).</entry>
                  </row>

                  <row>
                    <entry>40 ... 48</entry>

                    <entry>Floating-point values (text height, scale factors,
                    etc.).</entry>
                  </row>

                  <row>
                    <entry>49</entry>

                    <entry>epeated value - multiple 49 groups may appear in
                    one entity for variable length tables (such as the dash
                    lengths in the LTYPE table). A 7x group always appears
                    before the first 49 group to specify the table
                    length.</entry>
                  </row>

                  <row>
                    <entry>50 ... 58</entry>

                    <entry>Angles.</entry>
                  </row>

                  <row>
                    <entry>62</entry>

                    <entry>Color number (fixed).</entry>
                  </row>

                  <row>
                    <entry>66</entry>

                    <entry>"Entities follow" flag (fixed).</entry>
                  </row>

                  <row>
                    <entry>70 ... 78</entry>

                    <entry>Integer values, such as repeat counts, flag bits,
                    or modes.</entry>
                  </row>

                  <row>
                    <entry>210, 220, 230</entry>

                    <entry>X, Y, and Z components of extrusion
                    direction.</entry>
                  </row>

                  <row>
                    <entry>999</entry>

                    <entry>DXF only: The 999 group code indicates that the
                    line following it is a comment string. DXFOUT does not
                    include such groups in a DXF output file, but DXFIN honors
                    them and ignores the comments. You can use the 999 group
                    to include comments in a DXF file you've edited.</entry>
                  </row>
                </tbody>
              </tgroup>
            </table></para>

          <para/>
        </section>
      </section>

      <section>
        <title>Comments.</title>

        <para>The 999 group code indicates that the following line is a
        comment string.</para>

        <para>DXFOUT does not currently include such groups in its output
        file, but DXFIN honors them and ignores the comments.</para>

        <para>Thus, you can use the 999 group to include comments in a DXF
        file you've edited.</para>

        <para>For example:</para>

        <programlisting>999
This is a comment.
999
This is another comment.</programlisting>
      </section>

      <section>
        <title>File Sections.</title>

        <para>The DXF file is subdivided into four sections.</para>

        <para>File separator groups are used to delimit these file
        sections.</para>

        <para>The following is an example of a void DXF file with only the
        section markers and table headers present.</para>

        <programlisting>  0                           (Begin HEADER section)
SECTION
  2
HEADER
     &lt;&lt;&lt;&lt;Header variable items go here&gt;&gt;&gt;&gt;
  0
ENDSEC                        (End HEADER section)
  0                           (Begin TABLES section)
SECTION
  2
TABLES
  0
TABLE
  2
VPORT
 70
(viewport table maximum item count)
    &lt;&lt;&lt;&lt;viewport table items go here&gt;&gt;&gt;&gt;
  0
ENDTAB
  0
TABLE
  2
LTYPE, LAYER, STYLE, VIEW, UCS, or DWGMGR
 70
(Table maximum item count)
    &lt;&lt;&lt;&lt;Table items go here&gt;&gt;&gt;&gt;
  0
ENDTAB
  0
ENDSEC                        (End TABLES section)
  0                           (Begin BLOCKS section)
SECTION
  2
BLOCKS
    &lt;&lt;&lt;&lt;Block definition entities go here&gt;&gt;&gt;&gt;
  0
ENDSEC                        (End BLOCKS section)
  0                           (Begin ENTITIES section)
SECTION
  2
ENTITIES
    &lt;&lt;&lt;&lt;Drawing entities go here&gt;&gt;&gt;&gt;
  0
ENDSEC                        (End ENTITIES section)
  0
EOF                           (End of file)
</programlisting>

        <section>
          <title>HEADER Section.</title>

          <para>The HEADER section of the DXF file contains settings of
          variables associated with the drawing.</para>

          <para>These variables are set with various commands and are the type
          of information displayed by the STATUS command.</para>

          <para>Each variable is specified in the header section by a 9 group
          giving its name, followed by groups that supply its value.</para>

          <para>The header variables, the groups that follow, and their
          meanings are listed below.</para>

          <para>Although this list is very similar to the list of system
          variables in Appendix A, the two lists are not identical.</para>

          <para>Be sure you're referring to the proper list.</para>
        </section>
      </section>
    </section>
  </chapter>
</book>
